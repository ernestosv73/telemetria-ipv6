name: telemetria
mgmt:
  network: st
  ipv4-subnet: 172.80.80.0/24
  
topology:
  nodes:

    # Nokia SRL Linux Router
    srlrouter:
      kind: nokia_srlinux
      labels:
        graph-icon: router
      image: ghcr.io/nokia/srlinux:24.10.1
      type: ixrd3
      startup-config: router/config.json
      exec:
        - "sysctl -w net.ipv6.conf.e1-1.accept_ra=0"
      
    # Nokia SRL Linux Layer 2 Device
    srlswitch:
      kind: nokia_srlinux
      labels:
        graph-icon: switch
      image: ghcr.io/nokia/srlinux:24.10.1
      type: ixrd3
      startup-config: switch/srlswitch.cfg
                            
    # TELEMETRIA STACK
    prometheus:
      kind: linux
      mgmt-ipv4: 172.80.80.42
      image: quay.io/prometheus/prometheus:v2.54.1
      binds:
        - configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      cmd: --config.file=/etc/prometheus/prometheus.yml
      ports:
        - 9090:9090

    grafana:
      kind: linux
      mgmt-ipv4: 172.80.80.43
      image: grafana/grafana:latest
      binds:
        - configs/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
        - configs/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yaml:ro
        - configs/grafana/dashboards:/var/lib/grafana/dashboards
      ports:
        - 3000:3000
      env:
        # GF_INSTALL_PLUGINS: "yesoreyeram-infinity-datasource"
        # env vars to enable anonymous access
        GF_ORG_ROLE: "Admin"
        GF_ORG_NAME: "Main Org"
        GF_AUTH_ANONYMOUS_ENABLED: "true"
        GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
        GF_AUTH_ANONYMOUS: "true"
        GF_AUTH_OAUTH_AUTO_LOGIN: "true"
     
    elastic:
      kind: linux
      mgmt-ipv4: 172.80.80.9
      image: docker.elastic.co/elasticsearch/elasticsearch:7.17.7
      
      env:
        node.name: es01
        discovery.type: single-node
        #xpack.security.enabled: "true"
        #xpack.security.audit.enabled: "true"
        #xpack.security.authc.api_key.enabled: "true"
        ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      ports:
        - 9200:9200/tcp

    gNMIc:
      kind: linux
      labels:
        graph-icon: host
      image: esanchezv/hellt-gnmic:latest
      binds:
        - configs/python_scapy.sh:/root/python_scapy.sh
        - configs/gnmic/gnmic-config.yml:/gnmic-config.yml:ro
        - configs/gnmic/gnmic-config-acl.yml:/gnmic-config-acl.yml:ro
        - configs/icmpv6_capturav2.py:/root/icmpv6_capturav2.py
        - configs/icmpv6_capturav3.py:/root/icmpv6_capturav3.py
        - configs/supervisord.conf:/root/supervisord.conf
        - configs/sync_bindings.py:/root/sync_bindings.py
        #- configs/sync_bindings_v2.py:/root/sync_bindings_v2.py
           
      exec:
         - mkdir /data
         - chmod +x /data
         - touch /data/mac_ipv6_bindings_dynamic.json
         - chmod +x /root/python_scapy.sh
         - bash /root/python_scapy.sh    
        
    PC1:
      kind: linux
      labels:
        graph-icon: host
      image: docker.io/esanchezv/kaliipv6:latest
      exec:
        - "sysctl net.ipv6.conf.eth1.addr_gen_mode=3"
                      
    PC2:
      kind: linux
      labels:
        graph-icon: host
      image: docker.io/esanchezv/kaliipv6:latest
      exec:
        - "sysctl net.ipv6.conf.eth1.addr_gen_mode=3"
        - "sysctl net.ipv6.conf.eth1.addr_gen_mode=2"
        - "sysctl net.ipv6.conf.eth1.use_tempaddr=2"  
                  
    PC4:
      kind: linux
      labels:
        graph-icon: host
      image: docker.io/esanchezv/kaliipv6:latest
      exec:
        - "sysctl net.ipv6.conf.eth1.addr_gen_mode=3"
        - "sysctl net.ipv6.conf.eth1.addr_gen_mode=2"
        - "sysctl net.ipv6.conf.eth1.use_tempaddr=2"  

    srvweb:
       kind: linux
       image: docker.io/esanchezv/srvhttps:latest
       binds:
        #- config/serverweb.sh:/root/serverweb.sh
        - configs/web-server.html:/var/www/localhost/htdocs/index.html
       exec:
       #- nginx
       #- ip -6 route del default dev eth0
        - ip -6 addr add 2001:db8:d1::50/64 dev eth1
        - ip -6 route add 2001:db8:20::/64 via 2001:db8:d1::1  
          
  links:
    - endpoints: ["srlrouter:e1-1", "srlswitch:e1-1"]
    - endpoints: ["srlrouter:e1-2", "srvweb:eth1"]  
    - endpoints: ["PC1:eth1", "srlswitch:e1-2"]
      mtu: 1500
    - endpoints: ["PC2:eth1", "srlswitch:e1-3"]
      mtu: 1500
    - endpoints: ["gNMIc:eth1", "srlswitch:e1-4"]
      mtu: 1500
    - endpoints: ["PC4:eth1", "srlswitch:e1-5"]
      mtu: 1500  
    
  
    
    
     
